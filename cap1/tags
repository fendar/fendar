!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DIR_MODE	apue.h	30;"	d	language:C++
FILE_MODE	apue.h	25;"	d	language:C++
MAXLINE	apue.h	20;"	d	language:C++
SIG_ERR	apue.h	35;"	d	language:C++
Sigfunc	apue.h	/^typedef void   Sigfunc(int);   \/* for signal handlers *\/$/;"	t	language:C++
TELL_CHILD	apue.h	/^void    TELL_CHILD(pid_t);$/;"	p	language:C++	signature:(pid_t)
TELL_PARENT	apue.h	/^void    TELL_PARENT(pid_t);$/;"	p	language:C++	signature:(pid_t)
TELL_WAIT	apue.h	/^void    TELL_WAIT(void);        \/* parent\/child from Section 8.9 *\/$/;"	p	language:C++	signature:(void)
WAIT_CHILD	apue.h	/^void    WAIT_CHILD(void);$/;"	p	language:C++	signature:(void)
WAIT_PARENT	apue.h	/^void    WAIT_PARENT(void);$/;"	p	language:C++	signature:(void)
_APUE_H	apue.h	2;"	d	language:C++
_XOPEN_SOURCE	apue.h	4;"	d	language:C++
buf_args	apue.h	/^int      buf_args(char *, int (*func)(int,$/;"	p	language:C++	signature:(char *, int (*func)(int, char **))
cli_conn	apue.h	/^int      cli_conn(const char *);        \/* Figures 17.12 and 17.17 *\/$/;"	p	language:C++	signature:(const char *)
clr_fl	apue.h	/^void     clr_fl(int, int);               \/* Figure 3.11 *\/$/;"	p	language:C++	signature:(int, int)
daemonize	apue.h	/^void     daemonize(const char *);            \/* Figure 13.1 *\/$/;"	p	language:C++	signature:(const char *)
dirp	1-1.c	/^    struct dirent *dirp;$/;"	l	language:C++
dp	1-1.c	/^    DIR *dp;$/;"	l	language:C++
err_dump	apue.h	/^void    err_dump(const char *, ...);        \/* Appendix B *\/$/;"	p	language:C++	signature:(const char *, ...)
err_exit	apue.h	/^void    err_quit(const char *, ...);    void    err_exit(int, const char *, ...);$/;"	p	language:C++	signature:(int, const char *, ...)
err_msg	apue.h	/^void    err_msg(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
err_quit	apue.h	/^void    err_quit(const char *, ...);    void    err_exit(int, const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
err_ret	apue.h	/^void    err_ret(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
err_sys	apue.h	/^void    err_sys(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
format	tags	/^!_TAG_FILE_FORMAT	2	\/extended format; --format=1 will not append ;" to lines\/$/;"	v	language:C++
is_read_lockable	apue.h	99;"	d	language:C++
is_write_lockable	apue.h	101;"	d	language:C++
lock_reg	apue.h	/^int     lock_reg(int, int, int, off_t, int, off_t); \/* Figure 14.5 *\/$/;"	p	language:C++	signature:(int, int, int, off_t, int, off_t)
lock_test	apue.h	/^pid_t   lock_test(int, int, off_t, int, off_t);     \/* Figure 14.6 *\/$/;"	p	language:C++	signature:(int, int, off_t, int, off_t)
log_msg	apue.h	/^void    log_msg(const char *, ...);         \/* Appendix B *\/$/;"	p	language:C++	signature:(const char *, ...)
log_open	apue.h	/^void    log_open(const char *, int, int);$/;"	p	language:C++	signature:(const char *, int, int)
log_quit	apue.h	/^void    log_quit(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
log_ret	apue.h	/^void    log_ret(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
log_sys	apue.h	/^void    log_sys(const char *, ...);$/;"	p	language:C++	signature:(const char *, ...)
main	1-1.c	/^int main (int argc, char *argv[])$/;"	f	language:C++	signature:(int argc, char *argv[])
max	apue.h	39;"	d	language:C++
min	apue.h	38;"	d	language:C++
open_max	apue.h	/^long     open_max(void);                 \/* Figure 2.16 *\/$/;"	p	language:C++	signature:(void)
path_alloc	apue.h	/^char    *path_alloc(int *);              \/* Figure 2.15 *\/$/;"	p	language:C++	signature:(int *)
pr_exit	apue.h	/^void     pr_exit(int);                   \/* Figure 8.5 *\/$/;"	p	language:C++	signature:(int)
pr_mask	apue.h	/^void     pr_mask(const char *);          \/* Figure 10.14 *\/$/;"	p	language:C++	signature:(const char *)
pty_fork	apue.h	/^pid_t    pty_fork(int *, char *, int, const struct termios *,$/;"	p	language:C++	signature:(int *, char *, int, const struct termios *, const struct winsize *)
ptym_open	apue.h	/^int      ptym_open(char *, int);    \/* Figures 19.8, 19.9, and 19.10 *\/$/;"	p	language:C++	signature:(char *, int)
ptys_open	apue.h	/^int      ptys_open(char *);         \/* Figures 19.8, 19.9, and 19.10 *\/$/;"	p	language:C++	signature:(char *)
read_lock	apue.h	86;"	d	language:C++
readn	apue.h	/^ssize_t  readn(int, void *, size_t);         \/* Figure 14.29 *\/$/;"	p	language:C++	signature:(int, void *, size_t)
readw_lock	apue.h	88;"	d	language:C++
recv_fd	apue.h	/^int      recv_fd(int, ssize_t (*func)(int,$/;"	p	language:C++	signature:(int, ssize_t (*func)(int, const void *, size_t))
s_pipe	apue.h	/^int      s_pipe(int *);                 \/* Figures 17.6 and 17.13 *\/$/;"	p	language:C++	signature:(int *)
send_err	apue.h	/^int      send_err(int, int,$/;"	p	language:C++	signature:(int, int, const char *)
send_fd	apue.h	/^int      send_fd(int, int);             \/* Figures 17.20 and 17.22 *\/$/;"	p	language:C++	signature:(int, int)
serv_accept	apue.h	/^int      serv_accept(int, uid_t *);     \/* Figures 17.11 and 17.16 *\/$/;"	p	language:C++	signature:(int, uid_t *)
serv_listen	apue.h	/^int      serv_listen(const char *);     \/* Figures 17.10 and 17.15 *\/$/;"	p	language:C++	signature:(const char *)
set_fl	apue.h	/^void     set_fl(int, int);               \/* Figure 3.11 *\/$/;"	p	language:C++	signature:(int, int)
signal_intr	apue.h	/^Sigfunc *signal_intr(int, Sigfunc *);    \/* Figure 10.19 *\/$/;"	p	language:C++	signature:(int, Sigfunc *)
sleep_us	apue.h	/^void     sleep_us(unsigned int);             \/* Exercise 14.6 *\/$/;"	p	language:C++	signature:(unsigned int)
tty_atexit	apue.h	/^void     tty_atexit(void);               \/* Figure 18.20 *\/$/;"	p	language:C++	signature:(void)
tty_cbreak	apue.h	/^int      tty_cbreak(int);                \/* Figure 18.20 *\/$/;"	p	language:C++	signature:(int)
tty_raw	apue.h	/^int      tty_raw(int);                   \/* Figure 18.20 *\/$/;"	p	language:C++	signature:(int)
tty_reset	apue.h	/^int      tty_reset(int);                 \/* Figure 18.20 *\/$/;"	p	language:C++	signature:(int)
tty_termios	apue.h	/^struct termios  *tty_termios(void);      \/* Figure 18.20 *\/$/;"	p	language:C++	signature:(void)
un_lock	apue.h	94;"	d	language:C++
write_lock	apue.h	90;"	d	language:C++
writen	apue.h	/^ssize_t  writen(int, const void *, size_t);  \/* Figure 14.29 *\/$/;"	p	language:C++	signature:(int, const void *, size_t)
writew_lock	apue.h	92;"	d	language:C++
